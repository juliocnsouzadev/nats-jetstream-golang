# Using NATS JetStream with Go
30 May 2021

Loh Siu Yin
Engineering Manager, Xendit
siuyin@xendit.co

## Connecting to NATS from localhost
Port forward to the NATS server:

.code forward-ports.sh

```
 ./forward-ports.sh
```

## If you want to follow along ...

Presentation source and code are available here:

.link https://github.com/siuyin/present-intro-nats

## Hello JetStream
Get a context to manage JetStream.

.code cmd/hello/main.go /func main\(/,/^}/

```
go run cmd/hello/main.go
```

## Create or delete a Stream
cmd/stream/main.go:

.code cmd/stream/main.go /func main\(/,/^}/

I wrote the `strm` package to provide convenience functions to
manipulate NATS JetStreams.

## strm package: Create and Delete

.code strm/strm.go /func Create\(/,/^}/

.code strm/strm.go /func Delete\(/,/^}/


```
go run cmd/stream/main.go -help
```

## Use the stream via nats-box

```
export KUBECONFIG=/h/.kube/local.microk8s
kubectl get pods
kubectl exec -it POD -- /bin/sh -l
```

---


```
nats -s nats stream list

nats -s nats s info tst
```

---

```
nats -s nats req test t1
nats -s nats req test.x.y.z xyz2
nats -s nats s view tst
```

## Publish to the stream with Go
JetStream publishes are by default, acknowledged.

If an acknowledgement is received, this confirms JetStream has received the message.

.code cmd/jspub/main.go /func main\(/,/^}/


```
go run cmd/jspub/main.go
```

## publish

.code cmd/jspub/main.go /func publish\(/,/^}/

.code cmd/jspub/main.go /func testMsg\(/,/^}/

.code cmd/jspub/main.go /func testXYZMsg\(/,/^}/

## Creating a stream consumer

.code cmd/jscons/main.go

## Use the stream consumer via nats-box

```
nats -s nats consumer list tst

nats -s nats con info tst test-dot

nats -s nats con next tst test-dot
nats -s nats con next tst test
```

## Consuming the stream with Go

.code cmd/consume/main.go /func main\(/,/^}/

## showMsgs goroutine

.code cmd/consume/main.go /func showMsgs\(/,/^}/
.code cmd/consume/main.go /func fetch\(/,/^}/

## Demo
Clean up by removing the example stream

```
go run cmd/stream/main.go -delete
```

To set up test environment again:

```
go run cmd/stream/main.go     # create tst stream
go run cmd/jspub/main.go      # publish into stream
go run cmd/jscons/main.go     # create "tst test" and "tst test-dot" consumers
```

---

```
go run cmd/jspub/main.go      # publish into tst stream

go run cmd/consume/main.go    # create "tst test-go" as it does not already exist
```

---

```
nats -s nats con ls tst

nats -s nats con next tst test

nats -s nats con next tst test-dot --timeout=1s
```





## Presentation and code download

.link https://github.com/siuyin/present-intro-nats

